{"ast":null,"code":"var _jsxFileName = \"/Users/bruno/Desktop/Skills/React/interview/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst lines = {\n  1: {\n    label: \"Test\",\n    years: 5,\n    avgBalance: 123,\n    netChargeOffs: 321\n  },\n  2: {\n    label: \"Test2\",\n    years: 4,\n    avgBalance: 321,\n    netChargeOffs: 321\n  }\n};\n\nfunction App() {\n  const [lines, setLines] = useState([{\n    fieldId: 1,\n    label: \"Test\",\n    years: 5,\n    averageLoans: 123,\n    netChargeoffsSum: 123\n  }, {\n    fieldId: 2,\n    label: \"Test2\",\n    years: 4,\n    averageLoans: 321,\n    netChargeoffsSum: 321\n  }]);\n  useEffect(() => {\n    axios.get(`https://react-code-challenge.herokuapp.com/codeChallenge?fieldId=1&years=${lines[0].years}`).then(result => {\n      let linesCopy = lines.slice();\n      linesCopy[0].averageLoans = result.data.averageLoans;\n      linesCopy[0].netChargeoffsSum = result.data.netChargeoffsSum;\n      setLines(linesCopy);\n    });\n  }, [lines[0].years]);\n  useEffect(() => {\n    axios.get(`https://react-code-challenge.herokuapp.com/codeChallenge?fieldId=2&years=${lines[1].years}`).then(result => {\n      let linesCopy = lines.slice();\n      linesCopy[1].averageLoans = result.data.averageLoans;\n      linesCopy[1].netChargeoffsSum = result.data.netChargeoffsSum;\n      setLines(linesCopy);\n    });\n  }, [lines[1].years]);\n\n  const setYears = (e, item) => {\n    if (e.target.value > 5 || e.target.value < 0) {\n      return;\n    }\n\n    let copy = lines.slice();\n    let itemFromLines = copy.filter(t => t.fieldId === item.fieldId).slice();\n    itemFromLines[0].years = e.target.value;\n    setLines(copy);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    colSpan: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Life of Loan Net Chargeoff Rate:\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    colSpan: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Current Expected Credit Loss\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"(A)\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"(B)\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"=\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"(C)\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"(D)\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"(D x C)\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"WARM\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Avg\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Agg\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Historical\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"User\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Future\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Current\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Implied\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"In Years\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Net Chargeoffs\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Rate\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Adjustment \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Rate\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Result\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, lines.map(item => {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, item.label), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => setYears(e, item),\n      value: item.years,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, item.averageLoans, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, item.netChargeoffsSum), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"$78,690 \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"$78,690 \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"$78,690 \"));\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bruno/Desktop/Skills/React/interview/src/App.js"],"names":["React","useEffect","useState","axios","lines","label","years","avgBalance","netChargeOffs","App","setLines","fieldId","averageLoans","netChargeoffsSum","get","then","result","linesCopy","slice","data","setYears","e","item","target","value","copy","itemFromLines","filter","t","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst lines = {\n  1: {\n    label: \"Test\",\n    years: 5,\n    avgBalance: 123,\n    netChargeOffs: 321\n  },\n  2: {\n    label: \"Test2\",\n    years: 4,\n    avgBalance: 321,\n    netChargeOffs: 321\n  }\n};\n\nfunction App() {\n  const [lines, setLines] = useState([\n    {\n      fieldId: 1,\n      label: \"Test\",\n      years: 5,\n      averageLoans: 123,\n      netChargeoffsSum: 123\n    },\n    {\n      fieldId: 2,\n      label: \"Test2\",\n      years: 4,\n      averageLoans: 321,\n      netChargeoffsSum: 321\n    }\n  ]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://react-code-challenge.herokuapp.com/codeChallenge?fieldId=1&years=${lines[0].years}`\n      )\n      .then(result => {\n        let linesCopy = lines.slice();\n        linesCopy[0].averageLoans = result.data.averageLoans;\n        linesCopy[0].netChargeoffsSum = result.data.netChargeoffsSum;\n\n        setLines(linesCopy);\n      });\n  }, [lines[0].years]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://react-code-challenge.herokuapp.com/codeChallenge?fieldId=2&years=${lines[1].years}`\n      )\n      .then(result => {\n        let linesCopy = lines.slice();\n        linesCopy[1].averageLoans = result.data.averageLoans;\n        linesCopy[1].netChargeoffsSum = result.data.netChargeoffsSum;\n\n        setLines(linesCopy);\n      });\n  }, [lines[1].years]);\n\n  const setYears = (e, item) => {\n    if (e.target.value > 5 || e.target.value < 0) {\n      return;\n    }\n\n    let copy = lines.slice();\n    let itemFromLines = copy.filter(t => t.fieldId === item.fieldId).slice();\n\n    itemFromLines[0].years = e.target.value;\n    setLines(copy);\n  };\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <td colSpan=\"4\"></td>\n            <td colSpan=\"5\">Life of Loan Net Chargeoff Rate:</td>\n            <td></td>\n            <td colSpan=\"3\">Current Expected Credit Loss</td>\n          </tr>\n          <tr>\n            <td colSpan=\"4\"></td>\n            <td>(A)</td>\n            <td>+</td>\n            <td>(B)</td>\n            <td>=</td>\n            <td>(C)</td>\n            <td></td>\n            <td>(D)</td>\n            <td></td>\n            <td>(D x C)</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>WARM</td>\n            <td>Avg</td>\n            <td>Agg</td>\n            <td>Historical</td>\n            <td></td>\n            <td>User</td>\n            <td></td>\n            <td>Future</td>\n            <td></td>\n            <td>Current</td>\n            <td></td>\n            <td>Implied</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>In Years</td>\n            <td>Balance</td>\n            <td>Net Chargeoffs</td>\n            <td>Rate</td>\n            <td></td>\n            <td>Adjustment </td>\n            <td></td>\n            <td>Rate</td>\n            <td></td>\n            <td>Balance</td>\n            <td></td>\n            <td>Result</td>\n          </tr>\n        </thead>\n        <tbody>\n          {lines.map(item => {\n            return (\n              <tr>\n                <td>{item.label}</td>\n                <td>\n                  <input onChange={e => setYears(e, item)} value={item.years} />\n                </td>\n                <td>{item.averageLoans} </td>\n                <td>{item.netChargeoffsSum}</td>\n                <td>\n                  <input value=\"5\" />\n                </td>\n                <td>$78,690 </td>\n                <td>$78,690 </td>\n                <td>\n                  <input value=\"5\" />{\" \"}\n                </td>\n                <td>$78,690 </td>\n              </tr>\n            );\n          })}\n          {/* <tr>\n            <td>Unsecured Credit Card Loans</td>\n            <td>\n              <input value=\"5\" />\n            </td>\n            <td>$1,639,030 </td>\n            <td>$78,690 </td>\n            <td>\n              <input value=\"5\" />{\" \"}\n            </td>\n            <td>$78,690 </td>\n            <td>$78,690 </td>\n            <td>\n              <input value=\"5\" />{\" \"}\n            </td>\n            <td>$78,690 </td>\n          </tr>\n          <tr>\n            <td>New Vehicle Loans</td>\n            <td>\n              <input value=\"4\" />\n            </td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Total Gross Loans</td>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr> */}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}