{"ast":null,"code":"var _jsxFileName = \"/Users/bruno/Desktop/Skills/React/interview/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [lines, setLines] = useState([{\n    fieldId: 1,\n    label: \"Test\",\n    years: 5,\n    averageLoans: 0,\n    netChargeoffsSum: 0,\n    historicalRate: 0,\n    userAdjustments: 0,\n    futureRate: 0\n  }, {\n    fieldId: 2,\n    label: \"Test2\",\n    years: 4,\n    averageLoans: 0,\n    netChargeoffsSum: 0,\n    historicalRate: 0,\n    userAdjustments: 0,\n    futureRate: 0\n  }]);\n\n  const loadLineByYearsAndFieldId = (years, fieldId) => {\n    axios.get(`https://react-code-challenge.herokuapp.com/codeChallenge?fieldId=${fieldId}&years=${years}`).then(result => {\n      const {\n        averageLoans,\n        netChargeoffsSum\n      } = result.data;\n      let linesCopy = lines.slice();\n      let item = linesCopy.filter(item => item.fieldId === fieldId);\n      item[0].averageLoans = averageLoans;\n      item[0].netChargeoffsSum = netChargeoffsSum;\n      item[0].historicalRate = netChargeoffsSum / averageLoans;\n      item[0].futureRate = item[0].historicalRate + item[0].userAdjustments;\n      console.log(item[0].historicalRate);\n      console.log(item[0].userAdjustments);\n      console.log(\"Test\");\n      console.log(item[0].futureRate);\n      setLines(linesCopy);\n    });\n  };\n\n  useEffect(() => {\n    loadLineByYearsAndFieldId(lines[0].years, lines[0].fieldId);\n  }, []);\n  useEffect(() => {\n    loadLineByYearsAndFieldId(lines[1].years, lines[1].fieldId);\n  }, []);\n\n  const setYears = (e, item) => {\n    if (e.target.value > 5 || e.target.value < 0) {\n      return;\n    }\n\n    let copy = lines.slice();\n    let itemFromLines = copy.filter(t => t.fieldId === item.fieldId).slice();\n    itemFromLines[0].years = e.target.value;\n    setLines(copy);\n  };\n\n  const setUserAdjustments = (e, item) => {\n    let copy = lines.slice();\n    let itemFromLines = copy.filter(t => t.fieldId === item.fieldId).slice();\n    itemFromLines[0].userAdjustments = e.target.value;\n    console.log(itemFromLines);\n    setLines(copy);\n  };\n\n  const formatAsPercentage = value => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    colSpan: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Life of Loan Net Chargeoff Rate:\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    colSpan: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Current Expected Credit Loss\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"(A)\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"(B)\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"=\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"(C)\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"(D)\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"(D x C)\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"WARM\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Avg\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Agg\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Historical\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"User\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Future\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Current\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Implied\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"In Years\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Net Chargeoffs\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Rate\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Adjustment \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Rate\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Balance\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Result\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, lines.map(item => {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, item.label), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onBlur: e => loadLineByYearsAndFieldId(item.years, item.fieldId),\n      onChange: e => setYears(e, item),\n      value: item.years,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, item.averageLoans, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, item.netChargeoffsSum), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, formatAsPercentage(item.historicalRate)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onBlur: e => loadLineByYearsAndFieldId(item.years, item.fieldId),\n      onChange: e => setUserAdjustments(e, item),\n      value: item.userAdjustments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \" \", formatAsPercentage(item.futureRate)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"$78,690 \"));\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bruno/Desktop/Skills/React/interview/src/App.js"],"names":["React","useEffect","useState","axios","App","lines","setLines","fieldId","label","years","averageLoans","netChargeoffsSum","historicalRate","userAdjustments","futureRate","loadLineByYearsAndFieldId","get","then","result","data","linesCopy","slice","item","filter","console","log","setYears","e","target","value","copy","itemFromLines","t","setUserAdjustments","formatAsPercentage","toFixed","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [lines, setLines] = useState([\n    {\n      fieldId: 1,\n      label: \"Test\",\n      years: 5,\n      averageLoans: 0,\n      netChargeoffsSum: 0,\n      historicalRate: 0,\n      userAdjustments: 0,\n      futureRate: 0\n    },\n    {\n      fieldId: 2,\n      label: \"Test2\",\n      years: 4,\n      averageLoans: 0,\n      netChargeoffsSum: 0,\n      historicalRate: 0,\n      userAdjustments: 0,\n      futureRate: 0\n    }\n  ]);\n\n  const loadLineByYearsAndFieldId = (years, fieldId) => {\n    axios\n      .get(\n        `https://react-code-challenge.herokuapp.com/codeChallenge?fieldId=${fieldId}&years=${years}`\n      )\n      .then(result => {\n        const { averageLoans, netChargeoffsSum } = result.data;\n\n        let linesCopy = lines.slice();\n        let item = linesCopy.filter(item => item.fieldId === fieldId);\n        item[0].averageLoans = averageLoans;\n        item[0].netChargeoffsSum = netChargeoffsSum;\n        item[0].historicalRate = netChargeoffsSum / averageLoans;\n        item[0].futureRate = item[0].historicalRate + item[0].userAdjustments;\n\n        console.log(item[0].historicalRate);\n        console.log(item[0].userAdjustments);\n        console.log(\"Test\");\n        console.log(item[0].futureRate);\n\n        setLines(linesCopy);\n      });\n  };\n\n  useEffect(() => {\n    loadLineByYearsAndFieldId(lines[0].years, lines[0].fieldId);\n  }, []);\n\n  useEffect(() => {\n    loadLineByYearsAndFieldId(lines[1].years, lines[1].fieldId);\n  }, []);\n\n  const setYears = (e, item) => {\n    if (e.target.value > 5 || e.target.value < 0) {\n      return;\n    }\n\n    let copy = lines.slice();\n    let itemFromLines = copy.filter(t => t.fieldId === item.fieldId).slice();\n\n    itemFromLines[0].years = e.target.value;\n    setLines(copy);\n  };\n\n  const setUserAdjustments = (e, item) => {\n    let copy = lines.slice();\n    let itemFromLines = copy.filter(t => t.fieldId === item.fieldId).slice();\n\n    itemFromLines[0].userAdjustments = e.target.value;\n\n    console.log(itemFromLines);\n    setLines(copy);\n  };\n\n  const formatAsPercentage = value => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <td colSpan=\"4\"></td>\n            <td colSpan=\"5\">Life of Loan Net Chargeoff Rate:</td>\n            <td></td>\n            <td colSpan=\"3\">Current Expected Credit Loss</td>\n          </tr>\n          <tr>\n            <td colSpan=\"4\"></td>\n            <td>(A)</td>\n            <td>+</td>\n            <td>(B)</td>\n            <td>=</td>\n            <td>(C)</td>\n            <td></td>\n            <td>(D)</td>\n            <td></td>\n            <td>(D x C)</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>WARM</td>\n            <td>Avg</td>\n            <td>Agg</td>\n            <td>Historical</td>\n            <td></td>\n            <td>User</td>\n            <td></td>\n            <td>Future</td>\n            <td></td>\n            <td>Current</td>\n            <td></td>\n            <td>Implied</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>In Years</td>\n            <td>Balance</td>\n            <td>Net Chargeoffs</td>\n            <td>Rate</td>\n            <td></td>\n            <td>Adjustment </td>\n            <td></td>\n            <td>Rate</td>\n            <td></td>\n            <td>Balance</td>\n            <td></td>\n            <td>Result</td>\n          </tr>\n        </thead>\n        <tbody>\n          {lines.map(item => {\n            return (\n              <tr>\n                <td>{item.label}</td>\n                <td>\n                  <input\n                    onBlur={e =>\n                      loadLineByYearsAndFieldId(item.years, item.fieldId)\n                    }\n                    onChange={e => setYears(e, item)}\n                    value={item.years}\n                  />\n                </td>\n                <td>{item.averageLoans} </td>\n                <td>{item.netChargeoffsSum}</td>\n                <td>{formatAsPercentage(item.historicalRate)}</td>\n                <td></td>\n                <td>\n                  <input\n                    onBlur={e =>\n                      loadLineByYearsAndFieldId(item.years, item.fieldId)\n                    }\n                    onChange={e => setUserAdjustments(e, item)}\n                    value={item.userAdjustments}\n                  />\n                </td>\n                <td></td>\n                <td> {formatAsPercentage(item.futureRate)}</td>\n                <td></td>\n                <td>\n                  <input value=\"5\" />\n                </td>\n                <td></td>\n                <td>$78,690 </td>\n              </tr>\n            );\n          })}\n          {/* <tr>\n            <td>Unsecured Credit Card Loans</td>\n            <td>\n              <input value=\"5\" />\n            </td>\n            <td>$1,639,030 </td>\n            <td>$78,690 </td>\n            <td>\n              <input value=\"5\" />{\" \"}\n            </td>\n            <td>$78,690 </td>\n            <td>$78,690 </td>\n            <td>\n              <input value=\"5\" />{\" \"}\n            </td>\n            <td>$78,690 </td>\n          </tr>\n          <tr>\n            <td>New Vehicle Loans</td>\n            <td>\n              <input value=\"4\" />\n            </td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Total Gross Loans</td>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr> */}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}