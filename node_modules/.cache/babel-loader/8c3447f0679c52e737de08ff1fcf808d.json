{"ast":null,"code":"var _jsxFileName = \"/Users/bruno/Desktop/Skills/React/interview/src/App.js\";\nimport React, { useState } from \"react\";\nimport SummaryResults from \"./SummaryResults\";\nimport UnfundedCommitments from \"./UnfundedCommitments\";\nimport \"./style.css\";\n\nfunction App() {\n  const [ceclValue, setCeclValue] = useState(0);\n  const [isSummary, setIsSummary] = useState(0);\n\n  const formatAsPercentage = value => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  const formatAsDolarNumber = value => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n      minimumFractionDigits: 2\n    });\n    return `${formatter.format(value)}`;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"buttonsContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: isSummary ? \"active\" : \"inactive\",\n    onClick: e => setIsSummary(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Summary\"), React.createElement(\"button\", {\n    className: !isSummary ? \"active\" : \"inactive\",\n    onClick: e => setIsSummary(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Undunfed\")), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(SummaryResults, {\n    showSummary: isSummary,\n    formatAsPercentageCb: formatAsPercentage,\n    formatAsDolarNumberCb: formatAsDolarNumber,\n    ceclValue: ceclValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), !isSummary && React.createElement(UnfundedCommitments, {\n    showUnfunded: !isSummary,\n    ceclValue: ceclValue,\n    setCeclValueCb: setCeclValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bruno/Desktop/Skills/React/interview/src/App.js"],"names":["React","useState","SummaryResults","UnfundedCommitments","App","ceclValue","setCeclValue","isSummary","setIsSummary","formatAsPercentage","value","toFixed","formatAsDolarNumber","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","format","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAO,aAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMQ,kBAAkB,GAAGC,KAAK,IAAI;AAClC,WAAQ,GAAE,CAACA,KAAK,GAAG,GAAT,EAAcC,OAAd,CAAsB,CAAtB,CAAyB,GAAnC;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAGF,KAAK,IAAI;AACnC,UAAMG,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,MAAAA,KAAK,EAAE,UADwC;AAE/CC,MAAAA,QAAQ,EAAE,KAFqC;AAG/CC,MAAAA,qBAAqB,EAAE;AAHwB,KAA/B,CAAlB;AAMA,WAAQ,GAAEL,SAAS,CAACM,MAAV,CAAiBT,KAAjB,CAAwB,EAAlC;AACD,GARD;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEH,SAAS,GAAG,QAAH,GAAc,UADpC;AAEE,IAAA,OAAO,EAAEa,CAAC,IAAIZ,YAAY,CAAC,IAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAOE;AACE,IAAA,SAAS,EAAE,CAACD,SAAD,GAAa,QAAb,GAAwB,UADrC;AAEE,IAAA,OAAO,EAAEa,CAAC,IAAIZ,YAAY,CAAC,KAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,EAeE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAED,SADf;AAEE,IAAA,oBAAoB,EAAEE,kBAFxB;AAGE,IAAA,qBAAqB,EAAEG,mBAHzB;AAIE,IAAA,SAAS,EAAEP,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQG,CAACE,SAAD,IACC,oBAAC,mBAAD;AACE,IAAA,YAAY,EAAE,CAACA,SADjB;AAEE,IAAA,SAAS,EAAEF,SAFb;AAGE,IAAA,cAAc,EAAEC,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAfF,CADF;AAkCD;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport SummaryResults from \"./SummaryResults\";\nimport UnfundedCommitments from \"./UnfundedCommitments\";\nimport \"./style.css\";\n\nfunction App() {\n  const [ceclValue, setCeclValue] = useState(0);\n  const [isSummary, setIsSummary] = useState(0);\n\n  const formatAsPercentage = value => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  const formatAsDolarNumber = value => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n      minimumFractionDigits: 2\n    });\n\n    return `${formatter.format(value)}`;\n  };\n\n  return (\n    <div>\n      <div className=\"buttonsContainer\">\n        <button\n          className={isSummary ? \"active\" : \"inactive\"}\n          onClick={e => setIsSummary(true)}\n        >\n          Summary\n        </button>\n        <button\n          className={!isSummary ? \"active\" : \"inactive\"}\n          onClick={e => setIsSummary(false)}\n        >\n          Undunfed\n        </button>\n      </div>\n      <div className=\"container\">\n        <SummaryResults\n          showSummary={isSummary}\n          formatAsPercentageCb={formatAsPercentage}\n          formatAsDolarNumberCb={formatAsDolarNumber}\n          ceclValue={ceclValue}\n        />\n\n        {!isSummary && (\n          <UnfundedCommitments\n            showUnfunded={!isSummary}\n            ceclValue={ceclValue}\n            setCeclValueCb={setCeclValue}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}